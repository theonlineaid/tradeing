import axios from 'axios'
import _v from '../../../common/constants'
// const
const LOCAL_URL = window ? window.location.protocol + '//' + window.location.host : ''

// * URL must be end with slash ex. https://examble.com/path/
// * DATA must be an object format
type dataType = {
  [key: string]: any
} | null

const fetchData = (url: string, id?: number | null, data: dataType = null) =>
  axios[data ? 'post' : 'get'](id ? `${url}${id}/` : url, data)

const postData = (url: string, data: dataType) => axios.post(url, data)

const putData = (url: string, id?: number | null, data: dataType = null) =>
  axios.put(id ? `${url}${id}/` : url, data)

const deleteData = (url: string, id?: number | null) => axios.delete(id ? `${url}${id}/` : url)

// prettier-ignore
const _default = {
  login                 : (data : dataType) => fetchData(`${_v.API_URL_2}/${_v.AUTH_LOGIN_PATH}/`, null, data),
  register              : (data : dataType) => fetchData(`${_v.API_URL_2}/${_v.AUTH_REGISTER_PATH}/`, null, data),
  forgot                : (email: string) => fetchData(`${_v.API_URL_2}/${_v.AUTH_FORGOT_PASSWORD}/`, null, {email}),
  otp                   : (data : dataType) => postData(`${_v.API_URL_2}/${_v.AUTH_OTP}/`, data),
  sendVerificationCode  : (email: string) => fetchData(`${_v.API_URL_2}/${_v.AUTH_SEND_VERIFY_CODE_PATH}/`, null,  {email}),
  requestPassword       : (email: string) => fetchData(`${_v.API_URL}/${_v.AUTH_REQUEST_PASSWORD_PATH}/`, null, {email}),
  otpValidation         : (data : dataType) => fetchData(`${_v.API_URL_2}/${_v.AUTH_OTP_VALIDATE_PATH}/`, null, data),
  getUserByToken        : (token: string) => fetchData(`${_v.API_URL_2}/${_v.AUTH_GET_USER_BY_ACCESS_TOKEN_PATH}/`, null, {api_token: token}),
  getBoOption           : () => fetchData(`${_v.API_URL_2}/${_v.BO_GET_OPTION}/`),
  getBoType             : () => fetchData(`${_v.API_URL_2}/${_v.BO_GET_TYPES}/`),
  getBoResidence        : () => fetchData(`${_v.API_URL_2}/${_v.BO_GET_RESIDENCIES}/`),
  getBoDps              : () => fetchData(`${_v.API_URL_2}/${_v.BO_GET_DPS}/`),
  getBoDpsDetails       : (id: number) => fetchData(`${_v.API_URL_2}/${_v.BO_GET_DPS}/`, id),
  getCountryList        : () => fetchData(LOCAL_URL + '/countries.json'),
  getStatementCycle     : () => fetchData(`${_v.API_URL_2}/${_v.BO_STATEMENTS_LIST}/`),
  boAccountCreate       : (data : dataType) => fetchData(`${_v.API_URL_2}/${_v.BO_AC_CREATE}/`, null, data),
  boAddress             : (data : dataType) => fetchData(`${_v.API_URL_2}/${_v.BO_CREATE_ADDRESS}/`, null, data),
  boBank                : (data : dataType) => fetchData(`${_v.API_URL_2}/${_v.BO_CREATE_BANK}/`, null, data),
  boTrack               : (trackId: string) => fetchData(`${_v.API_URL_2}/${_v.BO_INFO}/${trackId}/`, ),
  boList                : () => fetchData(`${_v.API_URL_2}/${_v.BO_LIST}/`),
  tradeList             : () => fetchData(`${_v.API_URL_2}/${_v.TRADE_LIST}/`),
  tradeSell             : (data : dataType) => fetchData(`${_v.API_URL_2}/${_v.TRADE_SELL}/`, null, data),
  tradeBuy              : (data : dataType) => fetchData(`${_v.API_URL_2}/${_v.TRADE_BUY}/`, null, data),
  tradeDetailsInfo      : (id: number) => fetchData(`${_v.API_URL_2}/${_v.TRADE_COMPANIES}/`, id),
  userTradeList         : (id: number) => fetchData(`${_v.API_URL_2}/${_v.TRADE_ALL_BUY_SELL_USER}/`, id),
  shareList             : () => fetchData(`${_v.API_URL_DSE}/${_v.TRADE_COMPANY}/`),
  shareListInitial      : () => fetchData(`${_v.API_URL_DSE}/${_v.TRADE_COMPANY}/`),
  indicesList           : () => fetchData(LOCAL_URL + '/indices.json'),
  shareChartGraph       : () => fetchData(LOCAL_URL + '/shareChart.json'),
  areaChartGraph        : () => fetchData(LOCAL_URL + '/areaChart.json'),
  eventCalendarList     : () => fetchData(LOCAL_URL + '/calenderEvents.json'),
  indicesListTicker     : () => fetchData(LOCAL_URL + '/tickerIndices.json'),
  userBoInfo            : () => fetchData(`${_v.API_URL_2}/${_v.USER_BO_INFO}/`),
  createBasicInfo       : (data : dataType) => fetchData(`${_v.API_URL_2}/${_v.TRADE_CREATE_HOLDER_DETAILS}/`, null, data),
  getBasicInfo          : (trackId: string) => fetchData(`${_v.API_URL_2}/${_v.TRADE_BASIC_INFO_DETAILS}/${trackId}/`),
  getBoAllInfo          : (trackId: string) => fetchData(`${_v.API_URL_2}/${_v.BO_GET_All_INFO}/${trackId}/`),
  updateBasicInfo       : (data : dataType, id: number) => putData(`${_v.API_URL_2}/${_v.TRADE_UPDATE_HOLDER_DETAILS}/`, id, data),
  createNomineeInfo     : (data : dataType) => fetchData(`${_v.API_URL_2}/${_v.BO_CREATE_NOMINEE_DETAILS}/`, null, data),
  getNomineeInfo        : (trackId: string) => fetchData(`${_v.API_URL_2}/${_v.BO_GET_NOMINEE_INFO}/${trackId}/`),
  updateNomineeInfo     : (data : dataType, id: number) => putData(`${_v.API_URL_2}/${_v.BO_UPDATE_NOMINEE_INFO}/`, id, data),
  deleteNomineeInfo     : (id: number) => fetchData(`${_v.API_URL_2}/${_v.BO_DELETE_NOMINEE_INFO}/`, id),
  createOtherInfo       : (data : dataType) => fetchData(`${_v.API_URL_2}/${_v.BO_CREATE_OTHER_INFO}/`, null, data),
  getOtherInfo          : (trackId: string) => fetchData(`${_v.API_URL_2}/${_v.BO_GET_OTHER_INFO}/${trackId}/`),
  updateOtherInfo       : (data : dataType, id: number) => fetchData(`${_v.API_URL_2}/${_v.BO_UPDATE_OTHER_INFO}/`, id, data),
  createAddressInfo     : (data : dataType) => fetchData(`${_v.API_URL_2}/${_v.BO_CREATE_ADDRESS_INFO}/`, null, data),
  getAddressInfo        : (trackId: string) => fetchData(`${_v.API_URL_2}/${_v.BO_GET_ADDRESS_INFO}/${trackId}/`),
  updateAddressInfo     : (data : dataType, id: number) => putData(`${_v.API_URL_2}/${_v.BO_UPDATE_ADDRESS_INFO}/`, id, data),
  createBankInfo        : (data : dataType) => fetchData(`${_v.API_URL_2}/${_v.BO_CREATE_BANK}/`, null, data),
  updateBoBankMedia     : (data: dataType, bankDetailsId: number) => putData(`${_v.API_URL_2}/${_v.BO_UPDATE_BANK_INFO_IMAGES}/`, bankDetailsId, data),
  getBankInfo           : (trackId: string) => fetchData(`${_v.API_URL_2}/${_v.BO_BANK_INFO_GET}/${trackId}/`),
  updateBankInfo        : (data : dataType, id: number) => putData(`${_v.API_URL_2}/${_v.BO_BANK_INFO_UPDATE}/`, id, data),
  updateBankInfoForImg  : (data : dataType, id: number) => fetchData(`${_v.API_URL_2}/${_v.BO_BANK_INFO_UPDATE}/`, id, data),
  finishBo              : (trackId: string) => putData(`${_v.API_URL_2}/${_v.BO_FINISH}/${trackId}/`),
  updateBoAccount       : (data : dataType, id: number) => putData(`${_v.API_URL_2}/${_v.BO_AC_UPDATE}/`, id, data),
  boAcReference         : () => fetchData(`${_v.API_URL_2}/${_v.BO_AC_REFERENCE}/`),
  userData              : () => fetchData(`${_v.API_URL_2}/${_v.USER_BO_INFO}/`),
  updateUserData        : (data : dataType) => putData(`${_v.API_URL_2}/${_v.USER_PROFILE_UPDATE}/`, null, data),
  bitBuySell            : (data : dataType) => fetchData(`${_v.API_URL_2}/${_v.TRADE_BUY_BIT_TRADE}/`, null, data),
  askSellTrade          : (data : dataType) => fetchData(`${_v.API_URL_2}/${_v.TRADE_ASK_SELL}/`, null, data),
  buySellBit            : (id: number) => fetchData(`${_v.API_URL_DSE}/${_v.TRADE_BUY_SELL_BIT}/`, id),
  tradeAllOrdersBuy     : () => fetchData(`${_v.API_URL_DSE}/${_v.TRADE_ALL_ORDERS_BUY}/`),
  tradeAllOrdersSell    : () => fetchData(`${_v.API_URL_DSE}/${_v.TRADE_ALL_ORDERS_SELL}/`),
  tradeAllOrders        : () => fetchData(`${_v.API_URL_DSE}/${_v.TRADE_ALL_ORDERS_BUY}/`),
  allUserBoInfo         : () => fetchData(`${_v.API_URL_2}/${_v.USER_BO_INFO}/`),
  allUserBoInfo2        : (id?: number) => fetchData(`${_v.API_URL_2}/${_v.USER_BO_INFO_2}/`,id),
  orderList             : () => fetchData(`${_v.API_URL_2}/${_v.USER_ORDER_LIST}/`),
  userAccPortfolio      : (bo_no: number, bo_id: number) => fetchData(`${_v.API_URL_2}/${_v.USER_PORTFOLIO}/${bo_no}/`, bo_id),
  userTransactionHistory: (bo_no: number, bo_id: number) => fetchData(`${_v.API_URL_2}/${_v.USER_TRANSACTIONS}/${bo_no}/`, bo_id),
  userAccProfit         : (id: number) => fetchData(`${_v.API_URL_2}/${_v.USER_PROFIT}/`, id),
  singleUserInfo        : (bo_no: number, scrip: string) => fetchData(`${_v.API_URL_DSE}/${_v.USER_AVAILABLE_BALANCE}/${bo_no}/${scrip}/`),
  userInfo              : () => fetchData(`${_v.API_URL_2}/${_v.USER_INFO}/`),
  userTheme             : () => fetchData(`${_v.API_URL_2}/${_v.USER_THEME}/`),
  userThemeCreate       : (data: dataType) => postData(`${_v.API_URL_2}/${_v.USER_THEME_CREATE}/`, data),
  userThemeUpdate       : (themeName: string, data: dataType) => putData(`${_v.API_URL_2}/${_v.USER_THEME_UPDATE}/${themeName}/`, null, data),
  userThemeDelete       : (themeName: string) => deleteData(`${_v.API_URL_2}/${_v.USER_THEME_DELETE}/${themeName}/`),
  // userTableList         : (id: number) => fetchData(`${_v.API_URL_2}/${_v.USER_TABLE_LIST}/${id}/`),
  userTableList         : () => fetchData(`${_v.API_URL_2}/${_v.USER_TABLE_LIST}/`),
  userTableLayout       : () => fetchData(`${_v.API_URL_2}/${_v.USER_TABLE_LAYOUT}/`),
  userTableColumns      : ({id, user}: {id: number, user: number}) => fetchData(`${_v.API_URL_2}/${_v.USER_TABLE_COLUMNS}/${user}/${id}/`),
  userTableColumnsUpdate: ({id, body}: {id: number, body:dataType}) => putData(`${_v.API_URL_2}/${_v.TABLE_COLUMNS_UPDATE}/` , id, body),
  
  systemAllTableLists   : ()=>fetchData(`${_v.API_URL_2}/${_v.SYSTEM_ALL_TABLE_LIST}/`),
  getTestData           : (id: number, parent: string)=>fetchData(`${_v.API_URL_2}/${_v.API_TEST}/${id}/${parent}/`)
  // getTestData           : (id: number, parent: string)=>fetchData(`${_v.API_URL_2}/${`app_settings/table/field-list`}/${id}/${parent}/`)
}

export const {
  login,
  register,
  forgot,
  otp,
  sendVerificationCode,
  requestPassword,
  otpValidation,
  getUserByToken,
  getBoOption,
  getBoType,
  getBoResidence,
  getBoDps,
  getBoDpsDetails,
  getCountryList,
  getStatementCycle,
  boAccountCreate,
  boAddress,
  boBank,
  boTrack,
  boList,
  tradeList,
  tradeSell,
  tradeBuy,
  tradeDetailsInfo,
  userTradeList,
  shareList,
  shareListInitial,
  indicesList,
  shareChartGraph,
  areaChartGraph,
  eventCalendarList,
  indicesListTicker,
  userBoInfo,
  createBasicInfo,
  getBasicInfo,
  updateBasicInfo,
  createNomineeInfo,
  getNomineeInfo,
  updateNomineeInfo,
  deleteNomineeInfo,
  createOtherInfo,
  getOtherInfo,
  updateOtherInfo,
  createAddressInfo,
  getAddressInfo,
  updateAddressInfo,
  createBankInfo,
  updateBoBankMedia,
  getBankInfo,
  updateBankInfo,
  updateBankInfoForImg,
  finishBo,
  updateBoAccount,
  boAcReference,
  userData,
  updateUserData,
  bitBuySell,
  askSellTrade,
  buySellBit,
  tradeAllOrdersBuy,
  tradeAllOrdersSell,
  tradeAllOrders,
  allUserBoInfo,
  allUserBoInfo2,
  orderList,
  userAccPortfolio,
  userTransactionHistory,
  userAccProfit,
  singleUserInfo,
  userInfo,
  userTheme,
  userThemeCreate,
  userThemeUpdate,
  userThemeDelete,
  getBoAllInfo,
  userTableList,
  userTableLayout,
  userTableColumns,
  userTableColumnsUpdate,
  systemAllTableLists,
  getTestData
} = _default
